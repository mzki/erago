#!/bin/bash

set -eu

outputdir="build"

while getopts o: opt; do
	case "$opt" in
		o)
			outputdir="$OPTARG"
			;;
		\?)
			echo "Usage: credits [-o OUTPUTDIR]"
			exit 1
			;;
	esac
done
shift $((OPTIND - 1))

mkdir -p $outputdir

# test depedency tools are available.
which go-licenses >/dev/null
which go > /dev/null
which curl > /dev/null

rm -rf ${outputdir}/credits_desktop
rm -rf ${outputdir}/credits_mobile

# remove own repository from credits or remove repository whose LICENSE is not found.
ignore_pkg="github.com/mzki/erago,github.com/golang/freetype"
go-licenses save ./app/cmd \
  --ignore $ignore_pkg \
  --save_path ${outputdir}/credits_desktop \
  2>${outputdir}/credits_desktop_err.log 
go-licenses save ./mobile/model/v2 \
  --ignore $ignore_pkg \
  --save_path ${outputdir}/credits_mobile \
  2>${outputdir}/credits_mobile_err.log

# Additional licenses which are not found by the tool
# for desktop build.

## github.com/ebiten/internal/devicescale
target_dir=${outputdir}/credits_desktop/github.com/ebiten/internal/devicescale
mkdir -p $target_dir
cp ./app/internal/devicescale/LICENSE $target_dir/

## github.com/golang/freetype/truetype
target_dir=${outputdir}/credits_desktop/github.com/golang/freetype/truetype
mkdir -p $target_dir
cp $(go env GOPATH)/pkg/mod/github.com/golang/freetype\@v0.0.0-20170609003504-e2365dfdc4a0/LICENSE $target_dir/
cp $(go env GOPATH)/pkg/mod/github.com/golang/freetype\@v0.0.0-20170609003504-e2365dfdc4a0/licenses/ftl.txt $target_dir/

# for all platform
target_dir=${outputdir}/credits_all/Go
mkdir -p $target_dir
echo "Get Golang license"
curl -o $target_dir/LICENSE https://go.dev/LICENSE?m=text

# finally, create CREDITS files from credits_{platform}/
output_credit () {
	local license_path=$1
	# assumes path like ./github.com/golang/groupcache/LICENSE, get github.com/golang/groupcache
	local middle_path=$(dirname ${license_path#*/})
	local repo_name=${middle_path}
	(
		echo $repo_name
		echo "================================================================================"
		cat $license_path
		echo "--------------------------------------------------------------------------------"
		echo ""
	)
}

abspath () {
	# https://qiita.com/katoy/items/c0d9ff8aff59efa8fcbb
	local arg=$1
	local abs=$(cd $(dirname $arg) && pwd)/$(basename $arg)
	echo $abs
}

target_file=$(abspath ${outputdir}/CREDITS_list_desktop)
(
	pushd $outputdir/credits_all
	output_credit ./Go/LICENSE > $target_file
	popd
)
(
	pushd ${outputdir}/credits_desktop
	for p in $(find . -type f); do output_credit $p >> $target_file; done  
	popd
)
target_file=$(abspath ${outputdir}/CREDITS_list_mobile)
(
	pushd $outputdir/credits_all
	output_credit ./Go/LICENSE > $target_file
	popd
)
(
	pushd ${outputdir}/credits_mobile
	for p in $(find . -type f); do output_credit $p >> $target_file; done  
	popd
)